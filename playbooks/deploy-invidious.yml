---
- name: Deploy Invidious
  hosts: all
  become: true

  vars:

    # Define package lists based on distribution
    debian_packages:
      - certbot
      - curl
      - git
      - libssl-dev
      - libxml2-dev
      - libyaml-dev
      - libgmp-dev
      - libreadline-dev
      - librsvg2-bin
      - libsqlite3-dev
      - zlib1g-dev
      - libpcre3-dev
      - libevent-dev
      - postgresql
      - python3-certbot
      - python3-certbot-nginx
    arch_packages:
      - certbot
      - certbot-nginx
      - crystal
      - curl
      - git
      - base-devel
      - librsvg
      - postgresql
      - shards
    redhat_packages:
      # - certbot
      - curl
      - gcc
      - git
      - gmp-devel
      - libevent-devel
      - librsvg2-devel
      - libxml2-devel
      # - libyaml-devel
      - openssl-devel
      - postgresql
      - readline-devel
      - sqlite-devel
      - zlib-devel

  tasks:

    - name: Check If All Variables Are Defined
      ansible.builtin.fail:
        msg: 'Please confirm you have defined the following variables: invidious_repo, invidious_version, invidious_dir'
      when: invidious_repo is not defined or invidious_version is not defined or invidious_dir is not defined


    # Install packages for Debian
    - name: Install required packages - Debian
      ansible.builtin.package:
        name: "{{ debian_packages }}"
        state: present
      when: ansible_os_family == 'Debian'

    # Install packages for Arch
    - name: Install required packages - Arch
      ansible.builtin.package:
        name: "{{ arch_packages }}"
        state: present
      when: ansible_os_family == 'Archlinux'

    # Install packages for RedHat
    - name: Install required packages - RedHat
      ansible.builtin.package:
        name: "{{ redhat_packages }}"
        state: present
      when: ansible_os_family == 'RedHat'


    # Download crystal installer
    - name: Download Crystal Installer
      ansible.builtin.get_url:
        url: https://crystal-lang.org/install.sh
        dest: /tmp/crystal-install.sh
        mode: '0700'
      when: (ansible_os_family == 'Debian') or (ansible_os_family == 'RedHat')

    # Install crystal
    - name: Install Crystal
      ansible.builtin.command:
        cmd: bash /tmp/crystal-install.sh
      register: crystal_install_output
      changed_when: crystal_install_output.rc != 0  # <- Uses the return code to define when the task has changed
      when: (ansible_os_family == 'Debian') or (ansible_os_family == 'RedHat')


    # Create invidious group
    - name: Create Invidious Group
      ansible.builtin.group:
        name: invidious
        state: present

    # Create invidious user
    - name: Create Invidious User
      ansible.builtin.user:
        name: invidious
        comment: Invidious
        group: invidious
        create_home: true
        state: present


    # Clone Invidious repository
    - name: Clone Invidious repository
      ansible.builtin.git:
        repo: "{{ invidious_repo }}"
        dest: "{{ invidious_dir }}"
        version: "{{ invidious_version }}"
      register: git_clone

    # - name: Setup PostgresSQL

    - name: Start PostgresSQL Service
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

    # - name: Setup Invidious
    # - name: Create invidious config from template
    #   ansible.builtin.template:
    #     src: templates/config.j2
    #     dest: "{{ invidious_dir }}/config/config.yml"
    #     owner: invidious
    #     group: invidious
    #     mode: '0644'

    - name: Create/Copy Invidious Service
      ansible.builtin.copy:
        src: "{{ invidious_dir }}/invidious.service"
        dest: /etc/systemd/system/invidious.service
        owner: root
        group: root
        mode: '0644'

    - name: Start Invidious Service
      ansible.builtin.service:
        name: invidious
        state: started
        enabled: true

    # - name: Setup NGINX
    # - name: Setup Logrotate
